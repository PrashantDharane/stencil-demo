/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface ModalButton {
    'openModal': () => Promise<void>;
  }
  interface MyBackdrop {}
  interface MyForm {}
  interface MyModal {
    'info': string;
    'modaltitle': string;
    'showOptionsHandler': () => Promise<void>;
  }
  interface MyTable {
    'data': any[];
  }
  interface PageHome {
    'close': () => Promise<void>;
    'open': () => Promise<void>;
  }
  interface TableRow {
    'row': any;
  }
}

declare global {


  interface HTMLModalButtonElement extends Components.ModalButton, HTMLStencilElement {}
  var HTMLModalButtonElement: {
    prototype: HTMLModalButtonElement;
    new (): HTMLModalButtonElement;
  };

  interface HTMLMyBackdropElement extends Components.MyBackdrop, HTMLStencilElement {}
  var HTMLMyBackdropElement: {
    prototype: HTMLMyBackdropElement;
    new (): HTMLMyBackdropElement;
  };

  interface HTMLMyFormElement extends Components.MyForm, HTMLStencilElement {}
  var HTMLMyFormElement: {
    prototype: HTMLMyFormElement;
    new (): HTMLMyFormElement;
  };

  interface HTMLMyModalElement extends Components.MyModal, HTMLStencilElement {}
  var HTMLMyModalElement: {
    prototype: HTMLMyModalElement;
    new (): HTMLMyModalElement;
  };

  interface HTMLMyTableElement extends Components.MyTable, HTMLStencilElement {}
  var HTMLMyTableElement: {
    prototype: HTMLMyTableElement;
    new (): HTMLMyTableElement;
  };

  interface HTMLPageHomeElement extends Components.PageHome, HTMLStencilElement {}
  var HTMLPageHomeElement: {
    prototype: HTMLPageHomeElement;
    new (): HTMLPageHomeElement;
  };

  interface HTMLTableRowElement extends Components.TableRow, HTMLStencilElement {}
  var HTMLTableRowElement: {
    prototype: HTMLTableRowElement;
    new (): HTMLTableRowElement;
  };
  interface HTMLElementTagNameMap {
    'modal-button': HTMLModalButtonElement;
    'my-backdrop': HTMLMyBackdropElement;
    'my-form': HTMLMyFormElement;
    'my-modal': HTMLMyModalElement;
    'my-table': HTMLMyTableElement;
    'page-home': HTMLPageHomeElement;
    'table-row': HTMLTableRowElement;
  }
}

declare namespace LocalJSX {
  interface ModalButton {
    'onToggleModal'?: (event: CustomEvent<any>) => void;
  }
  interface MyBackdrop {}
  interface MyForm {
    'onFormSubmitEvent'?: (event: CustomEvent<any>) => void;
  }
  interface MyModal {
    'info'?: string;
    'modaltitle'?: string;
    'onToggleModal'?: (event: CustomEvent<any>) => void;
  }
  interface MyTable {
    'data'?: any[];
  }
  interface PageHome {}
  interface TableRow {
    'row'?: any;
  }

  interface IntrinsicElements {
    'modal-button': ModalButton;
    'my-backdrop': MyBackdrop;
    'my-form': MyForm;
    'my-modal': MyModal;
    'my-table': MyTable;
    'page-home': PageHome;
    'table-row': TableRow;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'modal-button': LocalJSX.ModalButton & JSXBase.HTMLAttributes<HTMLModalButtonElement>;
      'my-backdrop': LocalJSX.MyBackdrop & JSXBase.HTMLAttributes<HTMLMyBackdropElement>;
      'my-form': LocalJSX.MyForm & JSXBase.HTMLAttributes<HTMLMyFormElement>;
      'my-modal': LocalJSX.MyModal & JSXBase.HTMLAttributes<HTMLMyModalElement>;
      'my-table': LocalJSX.MyTable & JSXBase.HTMLAttributes<HTMLMyTableElement>;
      'page-home': LocalJSX.PageHome & JSXBase.HTMLAttributes<HTMLPageHomeElement>;
      'table-row': LocalJSX.TableRow & JSXBase.HTMLAttributes<HTMLTableRowElement>;
    }
  }
}


